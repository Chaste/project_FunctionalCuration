#ifdef CHASTE_CVODE
#ifndef DYNAMICCORRIAS_PURKINJE_2011FROMCELLMLCVODE_HPP_
#define DYNAMICCORRIAS_PURKINJE_2011FROMCELLMLCVODE_HPP_

//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: Corrias_rabbit_purkinje_model
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 12434, pycml: 12383, optimize: 12408)
//! on Fri May 27 16:09:23 2011
//! 
//! <autogenerated>

#include "AbstractCvodeCell.hpp"
#include "AbstractDynamicallyLoadableEntity.hpp"
#include "AbstractSystemWithOutputs.hpp"
#include "AbstractStimulusFunction.hpp"

class Dynamiccorrias_purkinje_2011FromCellMLCvode : public AbstractCvodeCell, public AbstractDynamicallyLoadableEntity, public AbstractSystemWithOutputs<N_Vector >
{
    // 
    // Settable parameters and readable variables
    // 
    double var_chaste_interface__i_ionic;
    double var_chaste_interface__protocol__i_cal;
    double var_membrane__i_stim;
    double var_chaste_interface__Time__time;
    
public:
    double Get_chaste_interface__i_ionic();
    double Get_chaste_interface__protocol__i_cal();
    double Get_membrane__i_stim();
    double Get_chaste_interface__Time__time();
    double Get_extracellular_calcium_concentration_constant();
    double Get_extracellular_potassium_concentration_constant();
    double Get_membrane_capacitance_constant();
    double Get_membrane_voltage_constant();
    Dynamiccorrias_purkinje_2011FromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus);
    ~Dynamiccorrias_purkinje_2011FromCellMLCvode();
    void VerifyStateVariables();
    double GetIIonic(const std::vector<double>* pStateVariables=NULL);
    void EvaluateRhs(double var_chaste_interface__Time__time, const N_Vector rY, N_Vector rDY);
    N_Vector ComputeDerivedQuantities(double var_chaste_interface__Time__time, const N_Vector & rY);
};


#endif // DYNAMICCORRIAS_PURKINJE_2011FROMCELLMLCVODE_HPP_
#endif // CHASTE_CVODE
