%!PS-Adobe-2.0 EPSF-2.0
%%Title: StochasticGenerationBased-Cell_division_locations.eps
%%Creator: gnuplot 4.2 patchlevel 6 
%%CreationDate: Wed Jan  2 20:54:37 2013
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 338 266
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color false def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -53 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (StochasticGenerationBased-Cell_division_locations.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 6 )
  /Author (Jonathan Cooper,361,01865 610671,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Wed Jan  2 20:54:37 2013)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
/MFshow {
   { dup 5 get 3 ge
     { 5 get 3 eq {gsave} {grestore} ifelse }
     {dup dup 0 get findfont exch 1 get scalefont setfont
     [ currentpoint ] exch dup 2 get 0 exch R dup 5 get 2 ne {dup dup 6
     get exch 4 get {show} {stringwidth pop 0 R} ifelse }if dup 5 get 0 eq
     {dup 3 get {2 get neg 0 exch R pop} {pop aload pop M} ifelse} {dup 5
     get 1 eq {dup 2 get exch dup 3 get exch 6 get stringwidth pop -2 div
     dup 0 R} {dup 6 get stringwidth pop -2 div 0 R 6 get
     show 2 index {aload pop M neg 3 -1 roll neg R pop pop} {pop pop pop
     pop aload pop M} ifelse }ifelse }ifelse }
     ifelse }
   forall} bind def
/MFwidth {0 exch { dup 5 get 3 ge { 5 get 3 eq { 0 } { pop } ifelse }
 {dup 3 get{dup dup 0 get findfont exch 1 get scalefont setfont
     6 get stringwidth pop add} {pop} ifelse} ifelse} forall} bind def
/MLshow { currentpoint stroke M
  0 exch R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MRshow { currentpoint stroke M
  exch dup MFwidth neg 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/MCshow { currentpoint stroke M
  exch dup MFwidth -2 div 3 -1 roll R
  Blacktext {gsave 0 setgray MFshow grestore} {MFshow} ifelse } bind def
/XYsave    { [( ) 1 2 true false 3 ()] } bind def
/XYrestore { [( ) 1 2 true false 4 ()] } bind def
end
%%EndProlog
gnudict begin
gsave
50 50 translate
0.050 0.050 scale
0 setgray
newpath
(Helvetica) findfont 160 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
976 512 M
3329 0 V
stroke
LTb
976 512 M
63 0 V
3266 0 R
-63 0 V
stroke
880 512 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 987 M
3329 0 V
stroke
LTb
976 987 M
63 0 V
3266 0 R
-63 0 V
stroke
880 987 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 50)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 1463 M
3329 0 V
stroke
LTb
976 1463 M
63 0 V
3266 0 R
-63 0 V
stroke
880 1463 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 1938 M
3329 0 V
stroke
LTb
976 1938 M
63 0 V
3266 0 R
-63 0 V
stroke
880 1938 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 150)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 2414 M
3329 0 V
stroke
LTb
976 2414 M
63 0 V
3266 0 R
-63 0 V
stroke
880 2414 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 200)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 2889 M
3329 0 V
stroke
LTb
976 2889 M
63 0 V
3266 0 R
-63 0 V
stroke
880 2889 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 250)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 3365 M
3329 0 V
stroke
LTb
976 3365 M
63 0 V
3266 0 R
-63 0 V
stroke
880 3365 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 300)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 3840 M
3329 0 V
stroke
LTb
976 3840 M
63 0 V
3266 0 R
-63 0 V
stroke
880 3840 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 350)]
] -53.3 MRshow
1.000 UL
LTb
1.000 UL
LTa
976 512 M
0 3328 V
stroke
LTb
976 512 M
0 63 V
0 3265 R
0 -63 V
stroke
976 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 0)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1309 512 M
0 3328 V
stroke
LTb
1309 512 M
0 63 V
0 3265 R
0 -63 V
stroke
1309 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 10)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1642 512 M
0 3328 V
stroke
LTb
1642 512 M
0 63 V
0 3265 R
0 -63 V
stroke
1642 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 20)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
1975 512 M
0 3328 V
stroke
LTb
1975 512 M
0 63 V
0 3265 R
0 -63 V
stroke
1975 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 30)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2308 512 M
0 3328 V
stroke
LTb
2308 512 M
0 63 V
0 3265 R
0 -63 V
stroke
2308 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 40)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2641 512 M
0 3328 V
stroke
LTb
2641 512 M
0 63 V
0 3265 R
0 -63 V
stroke
2641 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 50)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
2973 512 M
0 3328 V
stroke
LTb
2973 512 M
0 63 V
0 3265 R
0 -63 V
stroke
2973 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 60)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3306 512 M
0 3328 V
stroke
LTb
3306 512 M
0 63 V
0 3265 R
0 -63 V
stroke
3306 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 70)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3639 512 M
0 3328 V
stroke
LTb
3639 512 M
0 63 V
0 3265 R
0 -63 V
stroke
3639 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 80)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
3972 512 M
0 3328 V
stroke
LTb
3972 512 M
0 63 V
0 3265 R
0 -63 V
stroke
3972 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 90)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTa
4305 512 M
0 3328 V
stroke
LTb
4305 512 M
0 63 V
0 3265 R
0 -63 V
stroke
4305 352 M
[ [(Helvetica) 160.0 0.0 true true 0 ( 100)]
] -53.3 MCshow
1.000 UL
LTb
1.000 UL
LTb
976 3840 N
976 512 L
3329 0 V
0 3328 V
-3329 0 V
Z stroke
LCb setrgbcolor
320 2176 M
currentpoint gsave translate 90 rotate 0 0 moveto
[ [(Helvetica) 160.0 0.0 true true 0 (Number of divisions per box)]
] -53.3 MCshow
grestore
LTb
LCb setrgbcolor
2640 112 M
[ [(Helvetica) 160.0 0.0 true true 0 (Percentage height up the crypt \(%\))]
] -53.3 MCshow
LTb
2640 4080 M
[ [(Helvetica) 160.0 0.0 true true 0 (c\) Stochastic Generation-based)]
] -53.3 MCshow
1.000 UP
1.000 UL
LTb
5056 3760 M
[ [(Helvetica) 160.0 0.0 true true 0 (Crypt height)]
] -53.3 MCshow
1.000 UP
1.000 UL
LT0
LTb
5025 2000 M
[ [(Helvetica) 160.0 0.0 true true 0 (10)]
] -53.3 MRshow
LT0
5121 2000 M
447 0 V
1142 1720 M
333 -514 V
333 -104 V
333 152 V
2474 987 L
333 19 V
333 -47 V
3473 835 L
333 -47 V
333 19 V
1142 1720 CircleF
1475 1206 CircleF
1808 1102 CircleF
2141 1254 CircleF
2474 987 CircleF
2807 1006 CircleF
3140 959 CircleF
3473 835 CircleF
3806 788 CircleF
4139 807 CircleF
5344 2000 CircleF
1.000 UP
1.000 UL
LT1
LTb
5025 2160 M
[ [(Helvetica) 160.0 0.0 true true 0 (12)]
] -53.3 MRshow
LT1
5121 2160 M
447 0 V
1142 1929 M
333 -761 V
333 143 V
333 -76 V
333 -124 V
2807 997 L
333 -67 V
333 57 V
3806 778 L
333 -9 V
1142 1929 CircleF
1475 1168 CircleF
1808 1311 CircleF
2141 1235 CircleF
2474 1111 CircleF
2807 997 CircleF
3140 930 CircleF
3473 987 CircleF
3806 778 CircleF
4139 769 CircleF
5344 2160 CircleF
1.000 UP
1.000 UL
LT2
LTb
5025 2320 M
[ [(Helvetica) 160.0 0.0 true true 0 (14)]
] -53.3 MRshow
LT2
5121 2320 M
447 0 V
1142 1938 M
333 -456 V
333 -29 V
333 -266 V
333 0 V
333 -162 V
3140 921 L
333 -76 V
3806 702 L
333 57 V
1142 1938 CircleF
1475 1482 CircleF
1808 1453 CircleF
2141 1187 CircleF
2474 1187 CircleF
2807 1025 CircleF
3140 921 CircleF
3473 845 CircleF
3806 702 CircleF
4139 759 CircleF
5344 2320 CircleF
1.000 UP
1.000 UL
LT3
LTb
5025 2480 M
[ [(Helvetica) 160.0 0.0 true true 0 (16)]
] -53.3 MRshow
LT3
5121 2480 M
447 0 V
1142 2166 M
333 -570 V
333 -114 V
333 -228 V
333 -29 V
2807 997 L
3140 892 L
333 -95 V
3806 598 L
333 76 V
1142 2166 CircleF
1475 1596 CircleF
1808 1482 CircleF
2141 1254 CircleF
2474 1225 CircleF
2807 997 CircleF
3140 892 CircleF
3473 797 CircleF
3806 598 CircleF
4139 674 CircleF
5344 2480 CircleF
1.000 UP
1.000 UL
LT4
LTb
5025 2640 M
[ [(Helvetica) 160.0 0.0 true true 0 (18)]
] -53.3 MRshow
LT4
5121 2640 M
447 0 V
1142 2319 M
333 -666 V
333 -86 V
333 -199 V
333 -238 V
333 -114 V
3140 816 L
3473 702 L
333 19 V
4139 607 L
1142 2319 CircleF
1475 1653 CircleF
1808 1567 CircleF
2141 1368 CircleF
2474 1130 CircleF
2807 1016 CircleF
3140 816 CircleF
3473 702 CircleF
3806 721 CircleF
4139 607 CircleF
5344 2640 CircleF
1.000 UP
1.000 UL
LT5
LTb
5025 2800 M
[ [(Helvetica) 160.0 0.0 true true 0 (20)]
] -53.3 MRshow
LT5
5121 2800 M
447 0 V
1142 2528 M
333 -865 V
333 -29 V
333 -209 V
333 -247 V
2807 940 L
3140 769 L
333 -57 V
333 -86 V
333 -19 V
1142 2528 CircleF
1475 1663 CircleF
1808 1634 CircleF
2141 1425 CircleF
2474 1178 CircleF
2807 940 CircleF
3140 769 CircleF
3473 712 CircleF
3806 626 CircleF
4139 607 CircleF
5344 2800 CircleF
1.000 UP
1.000 UL
LT6
LTb
5025 2960 M
[ [(Helvetica) 160.0 0.0 true true 0 (22)]
] -53.3 MRshow
LT6
5121 2960 M
447 0 V
1142 2632 M
333 -684 V
333 -428 V
333 -133 V
333 -162 V
2807 854 L
333 -28 V
3473 664 L
333 -28 V
333 -19 V
1142 2632 CircleF
1475 1948 CircleF
1808 1520 CircleF
2141 1387 CircleF
2474 1225 CircleF
2807 854 CircleF
3140 826 CircleF
3473 664 CircleF
3806 636 CircleF
4139 617 CircleF
5344 2960 CircleF
1.000 UP
1.000 UL
LT7
LTb
5025 3120 M
[ [(Helvetica) 160.0 0.0 true true 0 (24)]
] -53.3 MRshow
LT7
5121 3120 M
447 0 V
1142 2851 M
333 -789 V
333 -276 V
333 -399 V
333 -352 V
2807 797 L
333 -95 V
333 -95 V
333 -47 V
333 -10 V
1142 2851 CircleF
1475 2062 CircleF
1808 1786 CircleF
2141 1387 CircleF
2474 1035 CircleF
2807 797 CircleF
3140 702 CircleF
3473 607 CircleF
3806 560 CircleF
4139 550 CircleF
5344 3120 CircleF
1.000 UP
1.000 UL
LT8
LTb
5025 3280 M
[ [(Helvetica) 160.0 0.0 true true 0 (26)]
] -53.3 MRshow
LT8
5121 3280 M
447 0 V
1142 3089 M
333 -980 V
333 -209 V
333 -599 V
2474 902 L
2807 778 L
3140 664 L
333 -66 V
333 -57 V
333 -19 V
1142 3089 CircleF
1475 2109 CircleF
1808 1900 CircleF
2141 1301 CircleF
2474 902 CircleF
2807 778 CircleF
3140 664 CircleF
3473 598 CircleF
3806 541 CircleF
4139 522 CircleF
5344 3280 CircleF
1.000 UP
1.000 UL
LT0
LTb
5025 3440 M
[ [(Helvetica) 160.0 0.0 true true 0 (28)]
] -53.3 MRshow
LT0
5121 3440 M
447 0 V
1142 3146 M
333 -922 V
333 -362 V
333 -618 V
2474 854 L
2807 721 L
3140 617 L
333 -19 V
333 -48 V
333 48 V
1142 3146 CircleF
1475 2224 CircleF
1808 1862 CircleF
2141 1244 CircleF
2474 854 CircleF
2807 721 CircleF
3140 617 CircleF
3473 598 CircleF
3806 550 CircleF
4139 598 CircleF
5344 3440 CircleF
1.000 UP
1.000 UL
LT1
LTb
5025 3600 M
[ [(Helvetica) 160.0 0.0 true true 0 (30)]
] -53.3 MRshow
LT1
5121 3600 M
447 0 V
1142 3384 M
333 -980 V
333 -656 V
333 -608 V
2474 854 L
2807 674 L
333 -76 V
333 -38 V
333 -29 V
333 -19 V
1142 3384 CircleF
1475 2404 CircleF
1808 1748 CircleF
2141 1140 CircleF
2474 854 CircleF
2807 674 CircleF
3140 598 CircleF
3473 560 CircleF
3806 531 CircleF
4139 512 CircleF
5344 3600 CircleF
1.000 UL
LTb
976 3840 N
976 512 L
3329 0 V
0 3328 V
-3329 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
