<?xml version="1.0"?>
<?xml-model href="../../../src/proto/parsing/protocol.rnc" type="application/relax-ng-compact-syntax"?>
<?oxygen RNGSchema="../../../src/proto/parsing/protocol.rnc" type="compact"?>
<protocol xmlns="https://chaste.cs.ox.ac.uk/nss/protocol/0.1#"
    xmlns:cellml="http://www.cellml.org/cellml/1.0#"
    xmlns:oxmeta="https://chaste.comlab.ox.ac.uk/cellml/ns/oxford-metadata#">
    
    <!-- Declare protocol inputs with default values -->
    <inputs>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            <apply><eq/>
                <ci>holding_potential</ci>
                <cn>-80.01</cn>
            </apply>
            <!-- How long to simulate for to get to steady state at the holding potential -->
            <apply><eq/>
                <ci>steady_state_time</ci>
                <cn>10000</cn>
            </apply>
            <!-- Fix some concentrations -->
            <apply><eq/>
                <ci>extracellular_potassium_concentration</ci>
                <cn>4</cn>
            </apply>
            <apply><eq/>
                <ci>cytosolic_potassium_concentration</ci>
                <cn>140</cn>
            </apply>
            <apply><eq/>
                <ci>cytosolic_sodium_concentration</ci>
                <cn>10</cn>
            </apply>
            
            <!-- The values to step the transmembrane potential to -->
            <apply><eq/>
                <ci>test_potentials</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/newArray"/>
                    <cn>-80.01</cn> <cn>-75.01</cn> <cn>-70.01</cn>
                    <cn>-65.01</cn> <cn>-60.01</cn> <cn>-55.01</cn> <cn>-52.51</cn><cn>-50.01</cn>
                    <cn>-47.51</cn> <cn>-45.01</cn> <cn>-42.51</cn> <cn>-40.01</cn>
                    <cn>-37.51</cn> <cn>-35.01</cn> <cn>-32.51</cn> <cn>-30.01</cn>
                    <cn>-27.51</cn> <cn>-25.01</cn> <cn>-22.51</cn> <cn>-20.01</cn> 
                    <cn>-17.51</cn> <cn>-15.01</cn> <cn>-12.51</cn> <cn>-10.01</cn>
                    <cn>-5.01</cn>
                    <cn> 0.01</cn> <cn> 5.01</cn> <cn>10.01</cn> <cn>20.01</cn> <cn>30.01</cn> 
                    <cn>40.01</cn>  <cn>50.01</cn>  <cn>60.01</cn>
                </apply>
            </apply>
        </apply>
    </inputs>
    
    <import source="../../../src/proto/library/BasicLibrary.xml" prefix="std"/>
    
    <units>
        <cellml:units name="mV">
            <cellml:unit units="volt" prefix="milli"/>
        </cellml:units>
        <cellml:units name="mM">               
            <cellml:unit units="mole" prefix="milli"/>
            <cellml:unit units="litre" exponent="-1"/>
        </cellml:units>
        <cellml:units name="ms">
            <cellml:unit units="second" prefix="milli"/>
        </cellml:units>
        <cellml:units name="uA_per_cm2"> <!-- Desired units of currents -->
            <cellml:unit units="ampere" prefix="micro"/>
            <cellml:unit units="metre" prefix="centi" exponent="-2"/>
        </cellml:units>
        <cellml:units name="uF_per_cm2">
            <cellml:unit units="farad" prefix="micro"/>
            <cellml:unit units="metre" prefix="centi" exponent="-2"/>
        </cellml:units>
        <cellml:units name="microamps">
            <cellml:unit units="ampere" prefix="micro"/>
        </cellml:units>
        <cellml:units name="A_per_F">
            <cellml:unit units="ampere"/>
            <cellml:unit units="farad" exponent="-1"/>
        </cellml:units>
    </units>
    
    <modelInterface>
        <!-- Inputs into simulations -->
        <specifyInputVariable name="oxmeta:membrane_voltage" units="mV"/>
        <specifyInputVariable name="oxmeta:cytosolic_sodium_concentration" units="mM"/>
        <specifyInputVariable name="oxmeta:cytosolic_potassium_concentration" units="mM"/>
        <specifyInputVariable name="oxmeta:extracellular_potassium_concentration" units="mM"/>
        
        <!-- Model outputs we are interested in -->
        <specifyOutputVariable name="oxmeta:membrane_fast_sodium_current" units="uA_per_cm2"/>
        <specifyOutputVariable name="oxmeta:membrane_voltage" units="mV"/>
        <specifyOutputVariable name="oxmeta:time" units="ms"/>
        
        <!-- Specify units conversions to get current in consistent units between models -->
        <declareNewVariable name="chaste_membrane_capacitance" units="uF_per_cm2" initial_value="1"/>               
        <unitsConversionRule desiredDimensions="uA_per_cm2" actualDimensions="A_per_F">
            <lambda xmlns="http://www.w3.org/1998/Math/MathML">
                <bvar><ci>rhs</ci></bvar>
                <apply><times/>
                    <ci>rhs</ci>
                    <ci>chaste_membrane_capacitance</ci>
                </apply>
            </lambda>
        </unitsConversionRule>
        <unitsConversionRule desiredDimensions="A_per_F" actualDimensions="uA_per_cm2">
            <lambda xmlns="http://www.w3.org/1998/Math/MathML">
                <bvar><ci>rhs</ci></bvar>
                <apply><divide/>
                    <ci>rhs</ci>
                    <ci>chaste_membrane_capacitance</ci>
                </apply>
            </lambda>
        </unitsConversionRule>
        <unitsConversionRule desiredDimensions="uA_per_cm2" actualDimensions="microamps">
            <lambda xmlns="http://www.w3.org/1998/Math/MathML">
                <bvar><ci>rhs</ci></bvar>
                <apply><times/>
                    <apply><divide/>
                        <ci>rhs</ci>
                        <ci>oxmeta:membrane_capacitance</ci>
                    </apply>
                    <ci>chaste_membrane_capacitance</ci>
                </apply>
            </lambda>
        </unitsConversionRule>
        <unitsConversionRule desiredDimensions="microamps" actualDimensions="uA_per_cm2">
            <lambda xmlns="http://www.w3.org/1998/Math/MathML">
                <bvar><ci>rhs</ci></bvar>
                <apply><divide/>
                    <apply><times/>
                        <ci>rhs</ci>
                        <ci>oxmeta:membrane_capacitance</ci>
                    </apply>
                    <ci>chaste_membrane_capacitance</ci>
                </apply>
            </lambda>
        </unitsConversionRule>
    </modelInterface>
    
    <simulations>
        <!-- Do a pre-run to get the model to steady-state for the holding potential -->
        <timecourseSimulation>
            <vectorStepper name="time" units="ms">
                <value>0</value>
                <ci xmlns="http://www.w3.org/1998/Math/MathML">steady_state_time</ci>
            </vectorStepper>
            <modifiers>
                <!-- Clamp the voltage to a holding potential -->
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:membrane_voltage</name>
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">holding_potential</ci>
                    </value>
                </setVariable>
                <!-- Clamp concentrations of certain ionic species in certain compartments -->
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:extracellular_potassium_concentration</name>
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">extracellular_potassium_concentration</ci>
                    </value>
                </setVariable>
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:cytosolic_potassium_concentration</name>
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">cytosolic_potassium_concentration</ci>
                    </value>
                </setVariable>
                <setVariable>
                    <when>AT_START_ONLY</when>
                    <name>oxmeta:cytosolic_sodium_concentration</name>
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">cytosolic_sodium_concentration</ci>
                    </value>
                </setVariable>
                <saveState>
                    <when>AT_END</when>
                    <name>holding_state</name>
                </saveState>
            </modifiers>
        </timecourseSimulation>
        
        <!-- Now do the IV curve generation -->
        <nestedSimulation prefix="sim">
            <vectorStepper name="step_voltage" units="mV">
                <ci xmlns="http://www.w3.org/1998/Math/MathML">test_potentials</ci>
            </vectorStepper>
            <modifiers>
                <!-- Reset the model to holding potential -->
                <resetState>
                    <when>EVERY_LOOP</when>
                    <state>holding_state</state>
                </resetState>                    
                <setVariable>
                    <when>EVERY_LOOP</when>
                    <name>oxmeta:membrane_voltage</name>
                    <value>
                        <ci xmlns="http://www.w3.org/1998/Math/MathML">holding_potential</ci>
                    </value>
                </setVariable>
            </modifiers>
            <timecourseSimulation>
                <uniformStepper name="time" units="ms">
                    <start>-1.0</start>
                    <stop>100.0</stop>
                    <step>0.001</step>
                </uniformStepper>
                <modifiers>
                    <setVariable>
                        <when>EVERY_LOOP</when>
                        <name>oxmeta:membrane_voltage</name>
                        <value>
                            <piecewise xmlns="http://www.w3.org/1998/Math/MathML">
                                <piece>
                                    <ci>step_voltage</ci>
                                    <apply><lt/>
                                        <apply><abs/>
                                            <apply><minus/>
                                                <ci>time</ci>
                                                <cn>0</cn>
                                            </apply>
                                        </apply>
                                        <cn>1e-6</cn>
                                    </apply>
                                </piece>
                                <otherwise>
                                    <ci>oxmeta:membrane_voltage</ci>
                                </otherwise>
                            </piecewise>
                        </value>
                    </setVariable>
                </modifiers>
            </timecourseSimulation>
        </nestedSimulation>
    </simulations>
    
    <post-processing>
        <apply xmlns="http://www.w3.org/1998/Math/MathML">
            <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/statementList"/>
            
            <!-- Test that expected model outputs exist -->
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:time</ci>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:membrane_voltage</ci>
                </apply>
            </apply>
            <apply>
                <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/assert"/>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/accessor">IS_ARRAY</csymbol>
                    <ci>sim:membrane_fast_sodium_current</ci>
                </apply>
            </apply>
            
            <!-- Only examine the "tail currents" after t=0 -->
            <apply><eq/>
                <ci>sodium_tail_current</ci>
                <apply><ci>std:After</ci>
                    <ci>sim:membrane_fast_sodium_current</ci>
                    <ci>sim:time</ci>
                    <cn>0</cn>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter"/>
                </apply>
            </apply>
            
            <!-- Get the minimum tail current (this has the largest magnitude) as a 1d array -->
            <apply><eq/>
                <ci>min_sodium_current</ci>
                <apply><ci>std:RemoveDim</ci>
                    <apply><ci>std:Min</ci>
                        <ci>sodium_tail_current</ci>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/defaultParameter"/>
                    </apply>
                    <cn>1</cn>
                </apply>
            </apply>
            
            <!-- We'll plot against the final V, which is equal to the step voltage -->
            <apply><eq/>
                <ci>final_membrane_voltage</ci>
                <apply>
                    <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/view"/>
                    <ci>sim:membrane_voltage</ci>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                        <cn>1</cn>
                        <cn>-1</cn>
                        <cn>0</cn>
                        <cn>-1</cn>
                    </apply>
                    <apply>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/tuple"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/>
                        <cn>1</cn>
                        <csymbol definitionURL="https://chaste.cs.ox.ac.uk/nss/protocol/null"/>
                    </apply>                    
                </apply>
            </apply>
        </apply>
    </post-processing>
    
    <outputVariables>
        <raw ref="sim:membrane_fast_sodium_current" name="membrane_fast_sodium_current"
            description="Fast sodium current"/>
        <raw ref="sim:membrane_voltage" name="membrane_voltage"
            description="Transmembrane potential"/>
        <postprocessed name="sodium_tail_current" units="{/Symbol m}A/cm^2"
            description="I_Na after test potential applied"/>
        <postprocessed name="min_sodium_current" description="Minimum sodium current" units="{/Symbol m}A/cm^2"/>
        <postprocessed name="final_membrane_voltage" units="mV" description="Test potential"/>
    </outputVariables>
    
    <plots>
        <plot>
            <title>Current-voltage relationship</title>
            <x>final_membrane_voltage</x>
            <y>min_sodium_current</y>
        </plot>
    </plots>
</protocol>
